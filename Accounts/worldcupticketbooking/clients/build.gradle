apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

configurations {
    all {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

dependencies {
    // Corda dependencies.
    implementation "$corda_release_group:corda-core:$corda_release_version"
    implementation "$corda_release_group:corda-rpc:$corda_release_version"
    implementation "$accounts_release_group:accounts-contracts:$accounts_release_version"
    implementation "$tokens_release_group:tokens-contracts:$tokens_release_version"

    // CorDapp dependencies.
    implementation project(":contracts")
    implementation project(":workflows")

    implementation("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4j_version}"
    implementation "org.apache.logging.log4j:log4j-web:${log4j_version}"
    implementation "org.slf4j:jul-to-slf4j:$slf4j_version"
}

springBoot {
    mainClass = "com.t20worldcup.webserver.Starter"
}

task runClient(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.t20worldcup.Client'
    args 'localhost:10006', 'user1', 'test'
}

task runServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.t20worldcup.webserver.Starter'
    args '--server.port=10050', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=test'
}
