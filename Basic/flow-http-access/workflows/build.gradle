apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "Flow HTTP"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

dependencies {
    // Corda dependencies.
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaProvided "$corda_release_group:corda-jackson:$corda_release_version"
    cordaProvided "$corda_release_group:corda-rpc:$corda_release_version"
    cordaProvided "$corda_release_group:corda-node-api:$corda_release_version"
    corda "$corda_release_group:corda:$corda_release_version"

    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    testImplementation "junit:junit:$junit_version"

    // OkHTTP: A simple HTTP library.
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
}

jar {
    // CorDapps do not configure the Node's logging.
    exclude '**/log4j2*.xml'
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
//        cordapps = []
	runSchemaMigration = true
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["StartFlow.com.flowhttp.HttpCallFlow"]]]
    }
}

test {
    jvmArgs = ['--add-opens', 'java.base/java.time=ALL-UNNAMED', '--add-opens', 'java.base/java.io=ALL-UNNAMED',
               '--add-opens', 'java.base/java.util=ALL-UNNAMED', '--add-opens', 'java.base/java.net=ALL-UNNAMED',
               '--add-opens', 'java.base/java.nio=ALL-UNNAMED', '--add-opens', 'java.base/java.lang.invoke=ALL-UNNAMED',
               '--add-opens', 'java.base/java.security.cert=ALL-UNNAMED', '--add-opens', 'java.base/java.security=ALL-UNNAMED',
               '--add-opens', 'java.base/javax.net.ssl=ALL-UNNAMED', '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
               '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED', '--add-opens', 'java.sql/java.sql=ALL-UNNAMED',
               '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',]
}
