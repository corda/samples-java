buildscript {
    Properties constants = new Properties()
    file("$projectDir/../constants.properties").withInputStream { constants.load(it) }

    ext {
        corda_release_group = constants.getProperty("cordaReleaseGroup")
        corda_release_version = constants.getProperty("cordaVersion")
        corda_core_release_group =  constants.getProperty("cordaCoreReleaseGroup")
        corda_core_release_version = constants.getProperty("cordaCoreVersion")
        corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
        junit_version = constants.getProperty("junitVersion")
        quasar_version = constants.getProperty("quasarVersion")
        log4j_version = constants.getProperty("log4jVersion")
        slf4j_version = constants.getProperty("slf4jVersion")
        corda_platform_version = constants.getProperty("platformVersion")
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

apply from: './repositories.gradle'

allprojects {

    apply plugin: 'java'
    apply plugin: 'net.corda.plugins.cordapp'
    apply plugin: 'net.corda.plugins.cordformation'
    apply plugin: 'net.corda.plugins.quasar-utils'

    jar {
        // CorDapps do not configure the Node's logging.
        exclude '**/log4j2*.xml'
    }

    configurations {
        compile {
            // We want to use SLF4J's version of these bindings: jcl-over-slf4j
            // Remove any transitive dependency on Apache's version.
            exclude group: 'commons-logging', module: 'commons-logging'
        }
    }

    dependencies {
        testCompile "junit:junit:$junit_version"

        // Corda dependencies.
        cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
        cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
        cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
        cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
        cordaRuntime "$corda_release_group:corda:$corda_release_version"

        testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
        cordaRuntime "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters" // Required for shell commands.
    }


    cordapp {
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
        workflow {
            name "CorDapp Name"
            vendor "Corda Open Source"
            licence "Apache License, Version 2.0"
            versionId 1
        }
    }

}