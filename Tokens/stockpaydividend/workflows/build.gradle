apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "stockpaydividend Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    cordaProvided group: 'com.google.guava', name: 'guava', version: '23.5-jre'

    // Corda dependencies.
    cordaProvided "$corda_release_group:corda-core:$corda_release_version"
    cordaProvided "$corda_release_group:corda:$corda_release_version"

    // For testing.
    testImplementation "junit:junit:$junit_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "$corda_core_release_group:corda-core-test-utils:$corda_core_release_version"


    // CorDapp dependencies.
    cordapp project(":contracts")

    // Token SDK dependencies.
    cordaProvided "$tokens_release_group:tokens-contracts:$tokens_release_version"
    cordaProvided "$tokens_release_group:tokens-workflows:$tokens_release_version"
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

test {
    jvmArgs = rootProject.ext.testJvmArgs
}